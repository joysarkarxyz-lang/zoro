async authenticateUser() {
  const clientId = this.settings.clientId;
  const redirectUri = this.settings.redirectUri || 'https://anilist.co/api/v2/oauth/pin';

  if (!clientId) {
    new Notice('❌ Please set your Client ID in plugin settings first.', 5000);
    return;
  }

  const authUrl = `https://anilist.co/api/v2/oauth/authorize?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&response_type=code`;

  try {
    new Notice('🔐 Opening AniList login page...', 3000);

    if (window.require) {
      const { shell } = window.require('electron');
      await shell.openExternal(authUrl);
    } else {
      window.open(authUrl, '_blank');
    }

    const code = await this.promptForCode('Paste the PIN code from AniList:');

    if (!code || !code.trim()) {
      new Notice('⚠️ No code entered. Authentication cancelled.', 4000);
      return;
    }

    await this.exchangeCodeForToken(code.trim(), redirectUri);
    new Notice('✅ Authenticated successfully.', 4000);
  } catch (error) {
    console.error('[Zoro] Authentication failed:', error);
    new Notice(`❌ Authentication error: ${error.message}`, 5000);
  }
}

async promptForCode(message) {
  return new Promise((resolve) => {
    const code = prompt(message);
    resolve(code);
  });
}

if (this.settings.accessToken) {
  const reuse = confirm('You are already authenticated. Do you want to re-authenticate?');
  if (!reuse) return;
}

