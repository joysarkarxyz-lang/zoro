renderSearchResults(el, media, config) {
  el.empty();

  if (!media || media.length === 0) {
    el.innerHTML = '<div class="anilist-search-message">ðŸ˜• No results found.</div>';
    return;
  }

  const layout = config.layout || 'card';
  const grid = document.createElement('div');
  grid.className = `anilist-results-grid layout-${layout}`;
  grid.style.setProperty('--anilist-grid-columns', this.settings.gridColumns || 3);

  media.forEach(item => {
    const title = item.title.english || item.title.romaji || item.title.native || 'Untitled';

    const card = document.createElement('div');
    card.className = 'anilist-search-card';

    // Cover image
    if (this.settings.showCoverImages) {
      const img = document.createElement('img');
      img.src = item.coverImage?.large || '';
      img.alt = `${title} cover`;
      img.className = 'media-cover';
      img.loading = 'lazy';
      card.appendChild(img);
    }

    const info = document.createElement('div');
    info.className = 'media-info';

    // Title
    const titleEl = document.createElement('h4');
    const titleLink = document.createElement('a');
    titleLink.href = this.getAniListUrl(item.id, config.mediaType);
    titleLink.target = '_blank';
    titleLink.rel = 'noopener noreferrer';
    titleLink.textContent = title;
    titleLink.className = 'anilist-title-link';
    titleEl.appendChild(titleLink);
    info.appendChild(titleEl);

    // Metadata badges
    const meta = document.createElement('div');
    meta.className = 'media-details';

    // Format
    if (item.format) {
      const format = document.createElement('span');
      format.className = 'format-badge';
      format.textContent = item.format;
      meta.appendChild(format);
    }

    // Status
    if (item.status) {
      const status = document.createElement('span');
      status.className = `status-badge status-${item.status.toLowerCase()}`;
      status.textContent = item.status;
      meta.appendChild(status);
    }

    // Score
    if (this.settings.showRatings && item.averageScore) {
      const score = document.createElement('span');
      score.className = 'score-badge';
      score.textContent = `â˜… ${item.averageScore}`;
      meta.appendChild(score);
    }

    info.appendChild(meta);

    // Genres
    if (this.settings.showGenres && item.genres?.length) {
      const genres = document.createElement('div');
      genres.className = 'media-genres';
      item.genres.slice(0, 3).forEach(genre => {
        const tag = document.createElement('span');
        tag.className = 'genre-tag';
        tag.textContent = genre;
        genres.appendChild(tag);
      });
      info.appendChild(genres);
    }

    card.appendChild(info);
    grid.appendChild(card);
  });

  el.appendChild(grid);
}