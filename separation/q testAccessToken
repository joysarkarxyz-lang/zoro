async testAccessToken() {
  const query = `
    query {
      Viewer {
        id
        name
      }
    }
  `;

  try {
    const response = await requestUrl({
      url: 'https://graphql.anilist.co',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.settings.accessToken}`
      },
      body: JSON.stringify({ query })
    });

    const data = response.json;
    if (!data || !data.data?.Viewer) {
      throw new Error('Invalid access token or response malformed.');
    }

    const username = data.data.Viewer.name;
    new Notice(`ðŸŽ‰ Welcome, ${username}! Token is valid.`);
    return true;

  } catch (error) {
    console.warn('[Zoro] testAccessToken failed:', error);
    throw new Error('Token verification failed. Please check your token or re-authenticate.');
  }
}