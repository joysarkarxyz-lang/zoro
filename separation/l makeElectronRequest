async makeElectronRequest(requestBody) {
  return new Promise((resolve, reject) => {
    if (typeof require === 'undefined') {
      throw new Error('Electron not available');
    }
    
    try {
      const { net } = require('electron');
      
      const request = net.request({
        method: 'POST',
        url: 'https://anilist.co/api/v2/oauth/token',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        }
      });
      
      request.on('response', (response) => {
        let body = '';
        
        response.on('data', (chunk) => {
          body += chunk;
        });
        
        response.on('end', () => {
          if (response.statusCode >= 200 && response.statusCode < 300) {
            try {
              resolve(JSON.parse(body));
            } catch (parseError) {
              reject(new Error(`Failed to parse response: ${parseError.message}`));
            }
          } else {
            reject(new Error(`HTTP ${response.statusCode}: ${body}`));
          }
        });
      });
      
      request.on('error', (error) => {
        reject(error);
      });
      
      request.write(JSON.stringify(requestBody));
      request.end();
      
    } catch (error) {
      reject(error);
    }
  });
}
