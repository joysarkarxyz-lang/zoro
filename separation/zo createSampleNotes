async createSampleNotes() {
  try {
    let successCount = 0;
    const errorMessages: string[] = [];

    const notesToCreate = [
      {
        title: "Zoro Anime Dashboard",
        content: `\`\`\`zoro-search
mediaType: ANIME
\`\`\`

# üëÄ Watching:
\`\`\`zoro
listType: CURRENT
mediaType: ANIME
\`\`\`

# üìù Planning:
\`\`\`zoro
listType: PLANNING
mediaType: ANIME
layout: card
\`\`\`

# üåÄ Repeating:
\`\`\`zoro
listType: REPEATING
mediaType: ANIME
layout: card
\`\`\`

# ‚è∏Ô∏è On Hold:
\`\`\`zoro
listType: PAUSED
mediaType: ANIME
layout: card
\`\`\`

# üèÅ Completed:
\`\`\`zoro
listType: COMPLETED
mediaType: ANIME
layout: card
\`\`\`

# üóëÔ∏è Dropped:
\`\`\`zoro
listType: DROPPED
mediaType: ANIME
layout: card
\`\`\`

# üìä Stats:
\`\`\`zoro
type: stats
\`\`\``
      },
      {
        title: "Zoro Manga Dashboard",
        content: `\`\`\`zoro-search
mediaType: MANGA
layout: card
\`\`\`

# üìñ Reading:
\`\`\`zoro
listType: CURRENT
mediaType: MANGA
\`\`\`

# üìù Planning:
\`\`\`zoro
listType: PLANNING
mediaType: MANGA
\`\`\`

# üåÄ Repeating:
\`\`\`zoro
listType: REPEATING
mediaType: MANGA
\`\`\`

# ‚è∏Ô∏è On Hold:
\`\`\`zoro
listType: PAUSED
mediaType: MANGA
\`\`\`

# üèÅ Completed:
\`\`\`zoro
listType: COMPLETED
mediaType: MANGA
\`\`\`

# üóëÔ∏è Dropped:
\`\`\`zoro
listType: DROPPED
mediaType: MANGA
\`\`\`

# üìä Stats:
\`\`\`zoro
type: stats
\`\`\``
      }
    ];

    for (const { title, content } of notesToCreate) {
      const filePath = `${title}.md`;
      const existingFile = this.app.vault.getAbstractFileByPath(filePath);

      if (existingFile) {
        errorMessages.push(`"${title}" already exists`);
        continue;
      }

      await this.app.vault.create(filePath, content);
      successCount++;
    }

    if (successCount > 0) {
      new Notice(`‚úÖ Created ${successCount} Zoro dashboard note${successCount > 1 ? 's' : ''}.`, 4000);
      const first = this.app.vault.getAbstractFileByPath(`${notesToCreate[0].title}.md`);
      if (first) await this.app.workspace.openLinkText(`${notesToCreate[0].title}.md`, '', false);
    }

    if (errorMessages.length > 0) {
      new Notice(`‚ö†Ô∏è Issues: ${errorMessages.join(', ')}`, 5000);
    }

  } catch (error) {
    console.error('Error creating notes:', error);
    new Notice(`‚ùå Failed to create Zoro notes: ${error.message}`, 5000);
  }
}