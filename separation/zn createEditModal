createEditModal(entry, onSave, onCancel) {
  const modal = document.createElement('div');
  modal.className = 'anilist-edit-modal';
  
  const overlay = document.createElement('div');
  overlay.className = 'anilist-modal-overlay';
  
  const content = document.createElement('div');
  content.className = 'anilist-modal-content';
  
  const title = document.createElement('h3');
  title.textContent = entry.media.title.english || entry.media.title.romaji;
  
  // Status dropdown
  const statusLabel = document.createElement('label');
  statusLabel.textContent = 'Status:';
  const statusSelect = document.createElement('select');
  statusSelect.style.marginLeft = '10px';
  ['CURRENT', 'PLANNING', 'COMPLETED', 'DROPPED', 'PAUSED', 'REPEATING'].forEach(status => {
    const option = document.createElement('option');
    option.value = status;
    option.textContent = status;
    if (status === entry.status) option.selected = true;
    statusSelect.appendChild(option);
  });
  
  // Score input
  const scoreLabel = document.createElement('label');
  scoreLabel.textContent = 'Score:';
  const scoreInput = document.createElement('input');
  scoreInput.type = 'number';
  scoreInput.min = '0';
  scoreInput.max = '10';
  scoreInput.step = '0.1';
  scoreInput.value = entry.score || '';
  scoreInput.placeholder = 'Score (0-10)';
  scoreInput.style.marginLeft = '10px';
  
  // Progress input
  const progressLabel = document.createElement('label');
  progressLabel.textContent = 'Progress:';
  const progressInput = document.createElement('input');
  progressInput.type = 'number';
  progressInput.min = '0';
  progressInput.max = entry.media.episodes || entry.media.chapters || 999;
  progressInput.value = entry.progress || 0;
  progressInput.placeholder = 'Progress';
  progressInput.style.marginLeft = '10px';
  
  // Quick progress buttons
  const quickProgressDiv = document.createElement('div');
  quickProgressDiv.className = 'quick-progress-buttons';
  quickProgressDiv.style.marginTop = '10px';
  
  const plusOneBtn = document.createElement('button');
  plusOneBtn.textContent = '+1';
  plusOneBtn.style.marginRight = '5px';
  plusOneBtn.onclick = (e) => {
    e.preventDefault();
    const current = parseInt(progressInput.value) || 0;
    const max = entry.media.episodes || entry.media.chapters || 999;
    if (current < max) {
      progressInput.value = current + 1;
    }
  };
  
const minusOneBtn = document.createElement('button');
  minusOneBtn.textContent = '-1';
  minusOneBtn.style.marginRight = '5px';
  minusOneBtn.onclick = (e) => {
    e.preventDefault();
    const current = parseInt(progressInput.value) || 0;
    if (current > 0) {
      progressInput.value = current - 1;
    }
  };
  
  const completeBtn = document.createElement('button');
  completeBtn.textContent = 'Complete';
  completeBtn.onclick = (e) => {
    e.preventDefault();
    progressInput.value = entry.media.episodes || entry.media.chapters || 1;
    statusSelect.value = 'COMPLETED';
  };
  
  quickProgressDiv.appendChild(plusOneBtn);
  quickProgressDiv.appendChild(minusOneBtn);
  quickProgressDiv.appendChild(completeBtn);
  
  const buttonContainer = document.createElement('div');
  buttonContainer.className = 'anilist-modal-buttons';
  buttonContainer.style.marginTop = '15px';
  
  const saveBtn = document.createElement('button');
  saveBtn.textContent = 'Save';
  saveBtn.style.marginRight = '10px';
  saveBtn.onclick = () => {
    onSave({
      status: statusSelect.value,
      score: parseFloat(scoreInput.value) || null,
      progress: parseInt(progressInput.value) || 0
    });
    document.body.removeChild(modal);
  };
  
  const cancelBtn = document.createElement('button');
  cancelBtn.textContent = 'Cancel';
  cancelBtn.onclick = () => {
    onCancel();
    document.body.removeChild(modal);
  };
  
  buttonContainer.appendChild(saveBtn);
  buttonContainer.appendChild(cancelBtn);
  
  content.appendChild(title);
  content.appendChild(statusLabel);
  content.appendChild(statusSelect);
  content.appendChild(document.createElement('br'));
  content.appendChild(document.createElement('br'));
  content.appendChild(scoreLabel);
  content.appendChild(scoreInput);
  content.appendChild(document.createElement('br'));
  content.appendChild(document.createElement('br'));
  content.appendChild(progressLabel);
  content.appendChild(progressInput);
  content.appendChild(quickProgressDiv);
  content.appendChild(buttonContainer);
  
  modal.appendChild(overlay);
  modal.appendChild(content);
  
  overlay.onclick = () => {
    onCancel();
    document.body.removeChild(modal);
  };
  
  document.body.appendChild(modal);
}